// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        androidx_test_version = '1.2.0'
        android_hilt_version = '1.0.0-alpha02'
        dagger_version = '2.28.3'
        exoplayer_version = '2.11.5'
        fragment_version = '1.2.5'
        fragment_ktx_version = '1.3.0-alpha07'
        hilt_version = '2.28.3-alpha'
        kotlin_version = '1.3.72'
        kotlin_coroutines_version = '1.3.2'
        lifecycle_version = '2.2.0'
        room_version = '2.2.5'
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.2.1"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.9.1"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
    }
}

subprojects {
    apply plugin: 'io.gitlab.arturbosch.detekt'
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    detekt {
        debug = true
        ignoreFailures = false
        failFast = false // fail build on any finding
        buildUponDefaultConfig = true // preconfigure defaults
        config = files("$projectDir/config/detekt.yml")
        // point to your custom config defining rules to run, overwriting default behavior
        baseline = file("$projectDir/config/detekt-baseline.xml")
        parallel = true
        reports {
            html.enabled = true // observe findings in your browser with structure and code snippets
            xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
            txt.enabled = true
            // similar to the console output, contains issue signature to manually edit baseline files
        }
    }

    ktlint {
        debug = true
        ignoreFailures = false
        coloredOutput = false
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

wrapper {
    gradleVersion = "6.1.1"
    distributionType = "all"
}